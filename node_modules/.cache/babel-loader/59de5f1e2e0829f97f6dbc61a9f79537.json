{"ast":null,"code":"var findCoinbaseFees = function findCoinbaseFees(price, percent) {\n  if (price > 200) return price * percent;else if (price <= 200 && price > 50) return price * percent + 2.99;else if (price <= 50 && price > 25) return price * percent + 1.99;else if (price <= 25 && price > 10) return price * percent + 1.49;else return price * percent + .99;\n};\nfunction findCoinbaseProFees(price) {\n  if (price > 1000000000) return price * 0.0004;else if (price > 500000000) return price * .0004;else if (price > 300000000) return price * .0005;else if (price > 100000000) return price * .0007;else if (price > 50000000) return price * .001;else if (price > 10000000) return price * .0015;else if (price > 1000000) return price * .0018;else if (price > 100000) return price * .002;else if (price > 50000) return price * .0025;else if (price > 10000) return price * .0035;else return price * .005;\n}\nfunction findGeminiFees(price, percent) {\n  if (price > 200) return price * 0.0149 + price * percent;else if (price > 50 && price <= 200) return 2.99 + price * percent;else if (price > 25 && price <= 50) return 1.99 + price * percent;else if (price > 10 && price <= 25) return 1.49 + price * percent;else return .99 + price * percent;\n}\nfunction findGeminiActiveTraderFees(price) {\n  if (price > 500000000) return price * 0.0003;else if (price > 250000000) return price * .0004;else if (price > 100000000) return price * .0005;else if (price > 50000000) return price * .00075;else if (price > 15000000) return price * .001;else if (price > 5000000) return price * .0015;else if (price > 500000) return price * .0025;else return price * .0035;\n}\nexport { findCoinbaseFees, findCoinbaseProFees, findGeminiFees, findGeminiActiveTraderFees };","map":{"version":3,"names":["findCoinbaseFees","price","percent","findCoinbaseProFees","findGeminiFees","findGeminiActiveTraderFees"],"sources":["C:/Users/edwin/OneDrive/Desktop/github/React-Portfolio/build/src/C/feeFinder.js"],"sourcesContent":["const findCoinbaseFees = (price, percent) => {\r\n    if (price > 200)   return price * percent;\r\n    else if (price <= 200 && price > 50)    return price * percent + 2.99;\r\n    else if (price <= 50 && price > 25) return price * percent + 1.99;\r\n    else if (price <= 25 && price > 10) return price * percent + 1.49;\r\n    else    return price * percent + .99;\r\n}\r\n\r\nfunction findCoinbaseProFees(price) {\r\n    if (price > 1000000000) return price * 0.0004;\r\n    else if (price > 500000000) return price * .0004;\r\n    else if (price > 300000000) return price * .0005;\r\n    else if (price > 100000000) return price * .0007;\r\n    else if (price > 50000000) return price * .001;\r\n    else if (price > 10000000) return price * .0015;\r\n    else if (price > 1000000) return price * .0018;\r\n    else if (price > 100000) return price * .002;\r\n    else if (price > 50000) return price * .0025;\r\n    else if (price > 10000) return price * .0035;\r\n    else return price * .005;\r\n}\r\n\r\nfunction findGeminiFees(price, percent) {\r\n    if (price > 200)    return price * 0.0149 + price * percent;\r\n    else if (price > 50 && price <= 200)    return 2.99 + price * percent;\r\n    else if (price > 25 && price <= 50) return 1.99 + price * percent;\r\n    else if (price > 10 && price <= 25) return 1.49 + price * percent;\r\n    else    return .99 + price * percent;\r\n}\r\n\r\nfunction findGeminiActiveTraderFees(price) {\r\n    if (price > 500000000)  return price * 0.0003;\r\n    else if (price > 250000000) return price * .0004;\r\n    else if (price > 100000000) return price * .0005;\r\n    else if (price > 50000000)  return price * .00075;\r\n    else if (price > 15000000)  return price * .001;\r\n    else if (price > 5000000)   return price * .0015;\r\n    else if (price > 500000)    return price * .0025;\r\n    else    return price * .0035;\r\n}\r\n\r\nexport {findCoinbaseFees, findCoinbaseProFees, findGeminiFees, findGeminiActiveTraderFees};"],"mappings":"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"},"metadata":{},"sourceType":"module"}